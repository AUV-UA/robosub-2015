// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: inputMessage.proto

package org.auvua.model.dangerZona.hardware.proto;

public final class InputMessageProto {
  private InputMessageProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface InputMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.auvua.model.dangerZona.hardware.proto.InputMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated double motor = 1;</code>
     */
    java.util.List<java.lang.Double> getMotorList();
    /**
     * <code>repeated double motor = 1;</code>
     */
    int getMotorCount();
    /**
     * <code>repeated double motor = 1;</code>
     */
    double getMotor(int index);

    /**
     * <code>repeated bool actuator = 2;</code>
     */
    java.util.List<java.lang.Boolean> getActuatorList();
    /**
     * <code>repeated bool actuator = 2;</code>
     */
    int getActuatorCount();
    /**
     * <code>repeated bool actuator = 2;</code>
     */
    boolean getActuator(int index);

    /**
     * <code>repeated bool switch = 3;</code>
     */
    java.util.List<java.lang.Boolean> getSwitchList();
    /**
     * <code>repeated bool switch = 3;</code>
     */
    int getSwitchCount();
    /**
     * <code>repeated bool switch = 3;</code>
     */
    boolean getSwitch(int index);

    /**
     * <code>required bool frontGoPro = 4;</code>
     */
    boolean hasFrontGoPro();
    /**
     * <code>required bool frontGoPro = 4;</code>
     */
    boolean getFrontGoPro();

    /**
     * <code>required bool downGoPro = 5;</code>
     */
    boolean hasDownGoPro();
    /**
     * <code>required bool downGoPro = 5;</code>
     */
    boolean getDownGoPro();

    /**
     * <code>required double lightRed = 6;</code>
     */
    boolean hasLightRed();
    /**
     * <code>required double lightRed = 6;</code>
     */
    double getLightRed();

    /**
     * <code>required double lightGreen = 7;</code>
     */
    boolean hasLightGreen();
    /**
     * <code>required double lightGreen = 7;</code>
     */
    double getLightGreen();

    /**
     * <code>required double lightBlue = 8;</code>
     */
    boolean hasLightBlue();
    /**
     * <code>required double lightBlue = 8;</code>
     */
    double getLightBlue();
  }
  /**
   * Protobuf type {@code org.auvua.model.dangerZona.hardware.proto.InputMessage}
   */
  public static final class InputMessage extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.auvua.model.dangerZona.hardware.proto.InputMessage)
      InputMessageOrBuilder {
    // Use InputMessage.newBuilder() to construct.
    private InputMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private InputMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final InputMessage defaultInstance;
    public static InputMessage getDefaultInstance() {
      return defaultInstance;
    }

    public InputMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private InputMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                motor_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000001;
              }
              motor_.add(input.readDouble());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                motor_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                motor_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                actuator_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000002;
              }
              actuator_.add(input.readBool());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                actuator_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                actuator_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                switch_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000004;
              }
              switch_.add(input.readBool());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                switch_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                switch_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000001;
              frontGoPro_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000002;
              downGoPro_ = input.readBool();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000004;
              lightRed_ = input.readDouble();
              break;
            }
            case 57: {
              bitField0_ |= 0x00000008;
              lightGreen_ = input.readDouble();
              break;
            }
            case 65: {
              bitField0_ |= 0x00000010;
              lightBlue_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          motor_ = java.util.Collections.unmodifiableList(motor_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          actuator_ = java.util.Collections.unmodifiableList(actuator_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          switch_ = java.util.Collections.unmodifiableList(switch_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.auvua.model.dangerZona.hardware.proto.InputMessageProto.internal_static_org_auvua_model_dangerZona_hardware_proto_InputMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.auvua.model.dangerZona.hardware.proto.InputMessageProto.internal_static_org_auvua_model_dangerZona_hardware_proto_InputMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.auvua.model.dangerZona.hardware.proto.InputMessageProto.InputMessage.class, org.auvua.model.dangerZona.hardware.proto.InputMessageProto.InputMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<InputMessage> PARSER =
        new com.google.protobuf.AbstractParser<InputMessage>() {
      public InputMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new InputMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<InputMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int MOTOR_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Double> motor_;
    /**
     * <code>repeated double motor = 1;</code>
     */
    public java.util.List<java.lang.Double>
        getMotorList() {
      return motor_;
    }
    /**
     * <code>repeated double motor = 1;</code>
     */
    public int getMotorCount() {
      return motor_.size();
    }
    /**
     * <code>repeated double motor = 1;</code>
     */
    public double getMotor(int index) {
      return motor_.get(index);
    }

    public static final int ACTUATOR_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Boolean> actuator_;
    /**
     * <code>repeated bool actuator = 2;</code>
     */
    public java.util.List<java.lang.Boolean>
        getActuatorList() {
      return actuator_;
    }
    /**
     * <code>repeated bool actuator = 2;</code>
     */
    public int getActuatorCount() {
      return actuator_.size();
    }
    /**
     * <code>repeated bool actuator = 2;</code>
     */
    public boolean getActuator(int index) {
      return actuator_.get(index);
    }

    public static final int SWITCH_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Boolean> switch_;
    /**
     * <code>repeated bool switch = 3;</code>
     */
    public java.util.List<java.lang.Boolean>
        getSwitchList() {
      return switch_;
    }
    /**
     * <code>repeated bool switch = 3;</code>
     */
    public int getSwitchCount() {
      return switch_.size();
    }
    /**
     * <code>repeated bool switch = 3;</code>
     */
    public boolean getSwitch(int index) {
      return switch_.get(index);
    }

    public static final int FRONTGOPRO_FIELD_NUMBER = 4;
    private boolean frontGoPro_;
    /**
     * <code>required bool frontGoPro = 4;</code>
     */
    public boolean hasFrontGoPro() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bool frontGoPro = 4;</code>
     */
    public boolean getFrontGoPro() {
      return frontGoPro_;
    }

    public static final int DOWNGOPRO_FIELD_NUMBER = 5;
    private boolean downGoPro_;
    /**
     * <code>required bool downGoPro = 5;</code>
     */
    public boolean hasDownGoPro() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bool downGoPro = 5;</code>
     */
    public boolean getDownGoPro() {
      return downGoPro_;
    }

    public static final int LIGHTRED_FIELD_NUMBER = 6;
    private double lightRed_;
    /**
     * <code>required double lightRed = 6;</code>
     */
    public boolean hasLightRed() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required double lightRed = 6;</code>
     */
    public double getLightRed() {
      return lightRed_;
    }

    public static final int LIGHTGREEN_FIELD_NUMBER = 7;
    private double lightGreen_;
    /**
     * <code>required double lightGreen = 7;</code>
     */
    public boolean hasLightGreen() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required double lightGreen = 7;</code>
     */
    public double getLightGreen() {
      return lightGreen_;
    }

    public static final int LIGHTBLUE_FIELD_NUMBER = 8;
    private double lightBlue_;
    /**
     * <code>required double lightBlue = 8;</code>
     */
    public boolean hasLightBlue() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required double lightBlue = 8;</code>
     */
    public double getLightBlue() {
      return lightBlue_;
    }

    private void initFields() {
      motor_ = java.util.Collections.emptyList();
      actuator_ = java.util.Collections.emptyList();
      switch_ = java.util.Collections.emptyList();
      frontGoPro_ = false;
      downGoPro_ = false;
      lightRed_ = 0D;
      lightGreen_ = 0D;
      lightBlue_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasFrontGoPro()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDownGoPro()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLightRed()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLightGreen()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLightBlue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < motor_.size(); i++) {
        output.writeDouble(1, motor_.get(i));
      }
      for (int i = 0; i < actuator_.size(); i++) {
        output.writeBool(2, actuator_.get(i));
      }
      for (int i = 0; i < switch_.size(); i++) {
        output.writeBool(3, switch_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(4, frontGoPro_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(5, downGoPro_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(6, lightRed_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(7, lightGreen_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(8, lightBlue_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 8 * getMotorList().size();
        size += dataSize;
        size += 1 * getMotorList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getActuatorList().size();
        size += dataSize;
        size += 1 * getActuatorList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getSwitchList().size();
        size += dataSize;
        size += 1 * getSwitchList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, frontGoPro_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, downGoPro_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, lightRed_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, lightGreen_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, lightBlue_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.auvua.model.dangerZona.hardware.proto.InputMessageProto.InputMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.auvua.model.dangerZona.hardware.proto.InputMessageProto.InputMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.auvua.model.dangerZona.hardware.proto.InputMessageProto.InputMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.auvua.model.dangerZona.hardware.proto.InputMessageProto.InputMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.auvua.model.dangerZona.hardware.proto.InputMessageProto.InputMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.auvua.model.dangerZona.hardware.proto.InputMessageProto.InputMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.auvua.model.dangerZona.hardware.proto.InputMessageProto.InputMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.auvua.model.dangerZona.hardware.proto.InputMessageProto.InputMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.auvua.model.dangerZona.hardware.proto.InputMessageProto.InputMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.auvua.model.dangerZona.hardware.proto.InputMessageProto.InputMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.auvua.model.dangerZona.hardware.proto.InputMessageProto.InputMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.auvua.model.dangerZona.hardware.proto.InputMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.auvua.model.dangerZona.hardware.proto.InputMessage)
        org.auvua.model.dangerZona.hardware.proto.InputMessageProto.InputMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.auvua.model.dangerZona.hardware.proto.InputMessageProto.internal_static_org_auvua_model_dangerZona_hardware_proto_InputMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.auvua.model.dangerZona.hardware.proto.InputMessageProto.internal_static_org_auvua_model_dangerZona_hardware_proto_InputMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.auvua.model.dangerZona.hardware.proto.InputMessageProto.InputMessage.class, org.auvua.model.dangerZona.hardware.proto.InputMessageProto.InputMessage.Builder.class);
      }

      // Construct using org.auvua.model.dangerZona.hardware.proto.InputMessageProto.InputMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        motor_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        actuator_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        switch_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        frontGoPro_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        downGoPro_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        lightRed_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        lightGreen_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000040);
        lightBlue_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.auvua.model.dangerZona.hardware.proto.InputMessageProto.internal_static_org_auvua_model_dangerZona_hardware_proto_InputMessage_descriptor;
      }

      public org.auvua.model.dangerZona.hardware.proto.InputMessageProto.InputMessage getDefaultInstanceForType() {
        return org.auvua.model.dangerZona.hardware.proto.InputMessageProto.InputMessage.getDefaultInstance();
      }

      public org.auvua.model.dangerZona.hardware.proto.InputMessageProto.InputMessage build() {
        org.auvua.model.dangerZona.hardware.proto.InputMessageProto.InputMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.auvua.model.dangerZona.hardware.proto.InputMessageProto.InputMessage buildPartial() {
        org.auvua.model.dangerZona.hardware.proto.InputMessageProto.InputMessage result = new org.auvua.model.dangerZona.hardware.proto.InputMessageProto.InputMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          motor_ = java.util.Collections.unmodifiableList(motor_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.motor_ = motor_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          actuator_ = java.util.Collections.unmodifiableList(actuator_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.actuator_ = actuator_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          switch_ = java.util.Collections.unmodifiableList(switch_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.switch_ = switch_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000001;
        }
        result.frontGoPro_ = frontGoPro_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000002;
        }
        result.downGoPro_ = downGoPro_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000004;
        }
        result.lightRed_ = lightRed_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000008;
        }
        result.lightGreen_ = lightGreen_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000010;
        }
        result.lightBlue_ = lightBlue_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.auvua.model.dangerZona.hardware.proto.InputMessageProto.InputMessage) {
          return mergeFrom((org.auvua.model.dangerZona.hardware.proto.InputMessageProto.InputMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.auvua.model.dangerZona.hardware.proto.InputMessageProto.InputMessage other) {
        if (other == org.auvua.model.dangerZona.hardware.proto.InputMessageProto.InputMessage.getDefaultInstance()) return this;
        if (!other.motor_.isEmpty()) {
          if (motor_.isEmpty()) {
            motor_ = other.motor_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureMotorIsMutable();
            motor_.addAll(other.motor_);
          }
          onChanged();
        }
        if (!other.actuator_.isEmpty()) {
          if (actuator_.isEmpty()) {
            actuator_ = other.actuator_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureActuatorIsMutable();
            actuator_.addAll(other.actuator_);
          }
          onChanged();
        }
        if (!other.switch_.isEmpty()) {
          if (switch_.isEmpty()) {
            switch_ = other.switch_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureSwitchIsMutable();
            switch_.addAll(other.switch_);
          }
          onChanged();
        }
        if (other.hasFrontGoPro()) {
          setFrontGoPro(other.getFrontGoPro());
        }
        if (other.hasDownGoPro()) {
          setDownGoPro(other.getDownGoPro());
        }
        if (other.hasLightRed()) {
          setLightRed(other.getLightRed());
        }
        if (other.hasLightGreen()) {
          setLightGreen(other.getLightGreen());
        }
        if (other.hasLightBlue()) {
          setLightBlue(other.getLightBlue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFrontGoPro()) {
          
          return false;
        }
        if (!hasDownGoPro()) {
          
          return false;
        }
        if (!hasLightRed()) {
          
          return false;
        }
        if (!hasLightGreen()) {
          
          return false;
        }
        if (!hasLightBlue()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.auvua.model.dangerZona.hardware.proto.InputMessageProto.InputMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.auvua.model.dangerZona.hardware.proto.InputMessageProto.InputMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Double> motor_ = java.util.Collections.emptyList();
      private void ensureMotorIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          motor_ = new java.util.ArrayList<java.lang.Double>(motor_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated double motor = 1;</code>
       */
      public java.util.List<java.lang.Double>
          getMotorList() {
        return java.util.Collections.unmodifiableList(motor_);
      }
      /**
       * <code>repeated double motor = 1;</code>
       */
      public int getMotorCount() {
        return motor_.size();
      }
      /**
       * <code>repeated double motor = 1;</code>
       */
      public double getMotor(int index) {
        return motor_.get(index);
      }
      /**
       * <code>repeated double motor = 1;</code>
       */
      public Builder setMotor(
          int index, double value) {
        ensureMotorIsMutable();
        motor_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double motor = 1;</code>
       */
      public Builder addMotor(double value) {
        ensureMotorIsMutable();
        motor_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double motor = 1;</code>
       */
      public Builder addAllMotor(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureMotorIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, motor_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double motor = 1;</code>
       */
      public Builder clearMotor() {
        motor_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Boolean> actuator_ = java.util.Collections.emptyList();
      private void ensureActuatorIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          actuator_ = new java.util.ArrayList<java.lang.Boolean>(actuator_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated bool actuator = 2;</code>
       */
      public java.util.List<java.lang.Boolean>
          getActuatorList() {
        return java.util.Collections.unmodifiableList(actuator_);
      }
      /**
       * <code>repeated bool actuator = 2;</code>
       */
      public int getActuatorCount() {
        return actuator_.size();
      }
      /**
       * <code>repeated bool actuator = 2;</code>
       */
      public boolean getActuator(int index) {
        return actuator_.get(index);
      }
      /**
       * <code>repeated bool actuator = 2;</code>
       */
      public Builder setActuator(
          int index, boolean value) {
        ensureActuatorIsMutable();
        actuator_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool actuator = 2;</code>
       */
      public Builder addActuator(boolean value) {
        ensureActuatorIsMutable();
        actuator_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool actuator = 2;</code>
       */
      public Builder addAllActuator(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureActuatorIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, actuator_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool actuator = 2;</code>
       */
      public Builder clearActuator() {
        actuator_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Boolean> switch_ = java.util.Collections.emptyList();
      private void ensureSwitchIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          switch_ = new java.util.ArrayList<java.lang.Boolean>(switch_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated bool switch = 3;</code>
       */
      public java.util.List<java.lang.Boolean>
          getSwitchList() {
        return java.util.Collections.unmodifiableList(switch_);
      }
      /**
       * <code>repeated bool switch = 3;</code>
       */
      public int getSwitchCount() {
        return switch_.size();
      }
      /**
       * <code>repeated bool switch = 3;</code>
       */
      public boolean getSwitch(int index) {
        return switch_.get(index);
      }
      /**
       * <code>repeated bool switch = 3;</code>
       */
      public Builder setSwitch(
          int index, boolean value) {
        ensureSwitchIsMutable();
        switch_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool switch = 3;</code>
       */
      public Builder addSwitch(boolean value) {
        ensureSwitchIsMutable();
        switch_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool switch = 3;</code>
       */
      public Builder addAllSwitch(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureSwitchIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, switch_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool switch = 3;</code>
       */
      public Builder clearSwitch() {
        switch_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private boolean frontGoPro_ ;
      /**
       * <code>required bool frontGoPro = 4;</code>
       */
      public boolean hasFrontGoPro() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required bool frontGoPro = 4;</code>
       */
      public boolean getFrontGoPro() {
        return frontGoPro_;
      }
      /**
       * <code>required bool frontGoPro = 4;</code>
       */
      public Builder setFrontGoPro(boolean value) {
        bitField0_ |= 0x00000008;
        frontGoPro_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool frontGoPro = 4;</code>
       */
      public Builder clearFrontGoPro() {
        bitField0_ = (bitField0_ & ~0x00000008);
        frontGoPro_ = false;
        onChanged();
        return this;
      }

      private boolean downGoPro_ ;
      /**
       * <code>required bool downGoPro = 5;</code>
       */
      public boolean hasDownGoPro() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required bool downGoPro = 5;</code>
       */
      public boolean getDownGoPro() {
        return downGoPro_;
      }
      /**
       * <code>required bool downGoPro = 5;</code>
       */
      public Builder setDownGoPro(boolean value) {
        bitField0_ |= 0x00000010;
        downGoPro_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool downGoPro = 5;</code>
       */
      public Builder clearDownGoPro() {
        bitField0_ = (bitField0_ & ~0x00000010);
        downGoPro_ = false;
        onChanged();
        return this;
      }

      private double lightRed_ ;
      /**
       * <code>required double lightRed = 6;</code>
       */
      public boolean hasLightRed() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required double lightRed = 6;</code>
       */
      public double getLightRed() {
        return lightRed_;
      }
      /**
       * <code>required double lightRed = 6;</code>
       */
      public Builder setLightRed(double value) {
        bitField0_ |= 0x00000020;
        lightRed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double lightRed = 6;</code>
       */
      public Builder clearLightRed() {
        bitField0_ = (bitField0_ & ~0x00000020);
        lightRed_ = 0D;
        onChanged();
        return this;
      }

      private double lightGreen_ ;
      /**
       * <code>required double lightGreen = 7;</code>
       */
      public boolean hasLightGreen() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required double lightGreen = 7;</code>
       */
      public double getLightGreen() {
        return lightGreen_;
      }
      /**
       * <code>required double lightGreen = 7;</code>
       */
      public Builder setLightGreen(double value) {
        bitField0_ |= 0x00000040;
        lightGreen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double lightGreen = 7;</code>
       */
      public Builder clearLightGreen() {
        bitField0_ = (bitField0_ & ~0x00000040);
        lightGreen_ = 0D;
        onChanged();
        return this;
      }

      private double lightBlue_ ;
      /**
       * <code>required double lightBlue = 8;</code>
       */
      public boolean hasLightBlue() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required double lightBlue = 8;</code>
       */
      public double getLightBlue() {
        return lightBlue_;
      }
      /**
       * <code>required double lightBlue = 8;</code>
       */
      public Builder setLightBlue(double value) {
        bitField0_ |= 0x00000080;
        lightBlue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double lightBlue = 8;</code>
       */
      public Builder clearLightBlue() {
        bitField0_ = (bitField0_ & ~0x00000080);
        lightBlue_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.auvua.model.dangerZona.hardware.proto.InputMessage)
    }

    static {
      defaultInstance = new InputMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.auvua.model.dangerZona.hardware.proto.InputMessage)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_auvua_model_dangerZona_hardware_proto_InputMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_auvua_model_dangerZona_hardware_proto_InputMessage_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022inputMessage.proto\022)org.auvua.model.da" +
      "ngerZona.hardware.proto\"\237\001\n\014InputMessage" +
      "\022\r\n\005motor\030\001 \003(\001\022\020\n\010actuator\030\002 \003(\010\022\016\n\006swi" +
      "tch\030\003 \003(\010\022\022\n\nfrontGoPro\030\004 \002(\010\022\021\n\tdownGoP" +
      "ro\030\005 \002(\010\022\020\n\010lightRed\030\006 \002(\001\022\022\n\nlightGreen" +
      "\030\007 \002(\001\022\021\n\tlightBlue\030\010 \002(\001B>\n)org.auvua.m" +
      "odel.dangerZona.hardware.protoB\021InputMes" +
      "sageProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_org_auvua_model_dangerZona_hardware_proto_InputMessage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_auvua_model_dangerZona_hardware_proto_InputMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_auvua_model_dangerZona_hardware_proto_InputMessage_descriptor,
        new java.lang.String[] { "Motor", "Actuator", "Switch", "FrontGoPro", "DownGoPro", "LightRed", "LightGreen", "LightBlue", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
